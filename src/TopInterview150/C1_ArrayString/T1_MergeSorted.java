/*
 Вам даны два целочисленных массива nums1 и nums2, отсортированные в порядке не убывания
 и два целых числа m и n, представляющие количество элементов в nums1 и nums2 соответственно.
 Объединить nums1 и nums2 в один массив, отсортированный в порядке не убывания.
 Окончательно отсортированный массив не должен возвращаться функцией, а должен храниться
 внутри массива nums1. Для этого он nums1 имеет длину m + n, где первые m элементы обозначают
 элементы, которые следует объединить, а последние n элементы имеют значение 0 и их следует
 игнорировать. nums2 имеет длину n.

 Пример 1:
  Ввод: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
  Выход: [1,2,2,3,5,6]
  Пояснение:
   Мы объединяем массивы [1,2,3] и [2,5,6].
   Результатом слияния является [1, 2, 2,3 , 5, 6] с подчеркнутыми элементами, взятыми из nums1.

 Пример 2:
  Входные данные: nums1 = [1], m = 1, nums2 = [], n = 0
  Выходные данные: [1]
  Объяснение: Мы объединяем массивы [1] и [].
  Результатом слияния является [1].

 Пример 3:
  Входные данные: nums1 = [0], m = 0, nums2 = [1], n = 1
  Выходные данные: [1]
  Объяснение: Мы объединяем массивы [] и [1].
  Результатом слияния является [1].
  Обратите внимание: поскольку m = 0, в nums1 нет элементов.
  0 нужен только для того, чтобы результат слияния мог поместиться в nums1.
*/
package Lessons.LeetCode.TopInterview150.C1_ArrayString;

public class T1_MergeSorted {

  public static void main(String[] args) {

  }
}
